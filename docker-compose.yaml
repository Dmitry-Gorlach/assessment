version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: ${ORDER_DB_USERNAME}
      POSTGRES_PASSWORD: ${ORDER_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    container_name: order-service
    environment:
      SPRING_PROFILES_ACTIVE: "local"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/orderdb"
      SPRING_DATASOURCE_USERNAME: ${ORDER_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${ORDER_DB_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      - postgres

  inventory-service:
    build:
      context: .
      dockerfile: inventory-service/Dockerfile
    container_name: inventory-service
    environment:
      SPRING_PROFILES_ACTIVE: "local"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/inventorydb"
      SPRING_DATASOURCE_USERNAME: ${INVENTORY_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${INVENTORY_DB_PASSWORD}
    ports:
      - "8082:8082"
    depends_on:
      - postgres

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: "local"
    ports:
      - "8080:8080"
    depends_on:
      - order-service
      - inventory-service

volumes:
  pgdata: